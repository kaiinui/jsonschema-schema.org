{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/RentalCarReservation",
  "required": false,
  "title": "RentalCarReservation",
  "name": "RentalCarReservation",
  "description": "A reservation for a rental car.",
  "type": "object",
  "properties": {
    "dropoffLocation": {
      "id": "http://schema.org/dropoffLocation",
      "required": false,
      "title": "dropoffLocation",
      "description": "Where a rental car can be dropped off.",
      "type": "object",
      "properties": {
        "dropoffLocation": {
          "$ref": "Place.json#/properties"
        }
      }
    },
    "dropoffTime": {
      "id": "http://schema.org/dropoffTime",
      "required": false,
      "title": "dropoffTime",
      "description": "When a rental car can be dropped off.",
      "type": "string"
    },
    "pickupLocation": {
      "id": "http://schema.org/pickupLocation",
      "required": false,
      "title": "pickupLocation",
      "description": "Where a taxi will pick up a passenger or a rental car can be picked up.",
      "type": "object",
      "properties": {
        "pickupLocation": {
          "$ref": "Place.json#/properties"
        }
      }
    },
    "pickupTime": {
      "id": "http://schema.org/pickupTime",
      "required": false,
      "title": "pickupTime",
      "description": "When a taxi will pickup a passenger or a rental car can be picked up.",
      "type": "string"
    },
    "": {
      "required": false,
      "title": "",
      "description": "",
      "type": null
    },
    "bookingTime": {
      "id": "http://schema.org/bookingTime",
      "required": false,
      "title": "bookingTime",
      "description": "The date and time the reservation was booked.",
      "type": "string"
    },
    "broker": {
      "id": "http://schema.org/broker",
      "required": false,
      "title": "broker",
      "description": "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred. Supersedes bookingAgent.",
      "type": "object",
      "properties": {
        "broker": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "modifiedTime": {
      "id": "http://schema.org/modifiedTime",
      "required": false,
      "title": "modifiedTime",
      "description": "The date and time the reservation was modified.",
      "type": "string"
    },
    "priceCurrency": {
      "id": "http://schema.org/priceCurrency",
      "required": false,
      "title": "priceCurrency",
      "description": "The currency (in 3-letter ISO 4217 format) of the price or a price component, when attached to PriceSpecification and its subtypes.",
      "type": "string"
    },
    "programMembershipUsed": {
      "id": "http://schema.org/programMembershipUsed",
      "required": false,
      "title": "programMembershipUsed",
      "description": "Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.",
      "type": "object",
      "properties": {
        "programMembershipUsed": {
          "$ref": "ProgramMembership.json#/properties"
        }
      }
    },
    "provider": {
      "id": "http://schema.org/provider",
      "required": false,
      "title": "provider",
      "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "reservationFor": {
      "id": "http://schema.org/reservationFor",
      "required": false,
      "title": "reservationFor",
      "description": "The thing -- flight, event, restaurant,etc. being reserved.",
      "type": "object",
      "properties": {
        "reservationFor": {
          "$ref": "Thing.json#/properties"
        }
      }
    },
    "reservationId": {
      "id": "http://schema.org/reservationId",
      "required": false,
      "title": "reservationId",
      "description": "A unique identifier for the reservation.",
      "type": "string"
    },
    "reservationStatus": {
      "id": "http://schema.org/reservationStatus",
      "required": false,
      "title": "reservationStatus",
      "description": "The current status of the reservation.",
      "type": "object",
      "properties": {
        "reservationStatus": {
          "$ref": "ReservationStatusType.json#/properties"
        }
      }
    },
    "reservedTicket": {
      "id": "http://schema.org/reservedTicket",
      "required": false,
      "title": "reservedTicket",
      "description": "A ticket associated with the reservation.",
      "type": "object",
      "properties": {
        "reservedTicket": {
          "$ref": "Ticket.json#/properties"
        }
      }
    },
    "totalPrice": {
      "id": "http://schema.org/totalPrice",
      "required": false,
      "title": "totalPrice",
      "description": "The total price for the reservation or ticket, including applicable taxes, shipping, etc.",
      "type": "object",
      "properties": {
        "totalPrice": {
          "$ref": "PriceSpecification.json#/properties"
        }
      }
    },
    "underName": {
      "id": "http://schema.org/underName",
      "required": false,
      "title": "underName",
      "description": "The person or organization the reservation or ticket is for.",
      "type": "object",
      "properties": {
        "underName": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "required": false,
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "required": false,
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "required": false,
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "required": false,
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "ImageObject.json#/properties"
        }
      }
    },
    "name": {
      "id": "http://schema.org/name",
      "required": false,
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "required": false,
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "required": false,
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string"
    },
    "url": {
      "id": "http://schema.org/url",
      "required": false,
      "title": "url",
      "description": "URL of the item.",
      "type": "string"
    }
  }
}
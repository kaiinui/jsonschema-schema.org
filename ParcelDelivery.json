{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "id": "http://schema.org/ParcelDelivery",
  "required": false,
  "title": "ParcelDelivery",
  "name": "ParcelDelivery",
  "description": "The delivery of a parcel either via the postal service or a commercial service.",
  "type": "object",
  "properties": {
    "deliveryAddress": {
      "id": "http://schema.org/deliveryAddress",
      "required": false,
      "title": "deliveryAddress",
      "description": "Destination address.",
      "type": "object",
      "properties": {
        "deliveryAddress": {
          "$ref": "PostalAddress.json#/properties"
        }
      }
    },
    "deliveryStatus": {
      "id": "http://schema.org/deliveryStatus",
      "required": false,
      "title": "deliveryStatus",
      "description": "New entry added as the package passes through each leg of its journey (from shipment to final delivery).",
      "type": "object",
      "properties": {
        "deliveryStatus": {
          "$ref": "DeliveryEvent.json#/properties"
        }
      }
    },
    "expectedArrivalFrom": {
      "id": "http://schema.org/expectedArrivalFrom",
      "required": false,
      "title": "expectedArrivalFrom",
      "description": "The earliest date the package may arrive.",
      "type": "string"
    },
    "expectedArrivalUntil": {
      "id": "http://schema.org/expectedArrivalUntil",
      "required": false,
      "title": "expectedArrivalUntil",
      "description": "The latest date the package may arrive.",
      "type": "string"
    },
    "hasDeliveryMethod": {
      "id": "http://schema.org/hasDeliveryMethod",
      "required": false,
      "title": "hasDeliveryMethod",
      "description": "Method used for delivery or shipping.",
      "type": "object",
      "properties": {
        "hasDeliveryMethod": {
          "$ref": "DeliveryMethod.json#/properties"
        }
      }
    },
    "itemShipped": {
      "id": "http://schema.org/itemShipped",
      "required": false,
      "title": "itemShipped",
      "description": "Item(s) being shipped.",
      "type": "object",
      "properties": {
        "itemShipped": {
          "$ref": "Product.json#/properties"
        }
      }
    },
    "originAddress": {
      "id": "http://schema.org/originAddress",
      "required": false,
      "title": "originAddress",
      "description": "Shipper's address.",
      "type": "object",
      "properties": {
        "originAddress": {
          "$ref": "PostalAddress.json#/properties"
        }
      }
    },
    "partOfOrder": {
      "id": "http://schema.org/partOfOrder",
      "required": false,
      "title": "partOfOrder",
      "description": "The overall order the items in this delivery were included in.",
      "type": "object",
      "properties": {
        "partOfOrder": {
          "$ref": "Order.json#/properties"
        }
      }
    },
    "provider": {
      "id": "http://schema.org/provider",
      "required": false,
      "title": "provider",
      "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.",
      "type": "object",
      "properties": {
        "provider": {
          "$ref": "Person.json#/properties"
        }
      }
    },
    "trackingNumber": {
      "id": "http://schema.org/trackingNumber",
      "required": false,
      "title": "trackingNumber",
      "description": "Shipper tracking number.",
      "type": "string"
    },
    "trackingUrl": {
      "id": "http://schema.org/trackingUrl",
      "required": false,
      "title": "trackingUrl",
      "description": "Tracking url for the parcel delivery.",
      "type": "string"
    },
    "": {
      "required": false,
      "title": "",
      "description": "",
      "type": null
    },
    "additionalType": {
      "id": "http://schema.org/additionalType",
      "required": false,
      "title": "additionalType",
      "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
      "type": "string"
    },
    "alternateName": {
      "id": "http://schema.org/alternateName",
      "required": false,
      "title": "alternateName",
      "description": "An alias for the item.",
      "type": "string"
    },
    "description": {
      "id": "http://schema.org/description",
      "required": false,
      "title": "description",
      "description": "A short description of the item.",
      "type": "string"
    },
    "image": {
      "id": "http://schema.org/image",
      "required": false,
      "title": "image",
      "description": "An image of the item. This can be a URL or a fully described ImageObject.",
      "type": "object",
      "properties": {
        "image": {
          "$ref": "ImageObject.json#/properties"
        }
      }
    },
    "name": {
      "id": "http://schema.org/name",
      "required": false,
      "title": "name",
      "description": "The name of the item.",
      "type": "string"
    },
    "potentialAction": {
      "id": "http://schema.org/potentialAction",
      "required": false,
      "title": "potentialAction",
      "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
      "type": "object",
      "properties": {
        "potentialAction": {
          "$ref": "Action.json#/properties"
        }
      }
    },
    "sameAs": {
      "id": "http://schema.org/sameAs",
      "required": false,
      "title": "sameAs",
      "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Freebase page, or official website.",
      "type": "string"
    },
    "url": {
      "id": "http://schema.org/url",
      "required": false,
      "title": "url",
      "description": "URL of the item.",
      "type": "string"
    }
  }
}